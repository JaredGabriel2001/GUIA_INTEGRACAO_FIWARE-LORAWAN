version: "3.7"

services:
  mongodb:
    extends:
      file: docker-compose-dev.yml
      service: mongodb
    volumes:
      - mongo_data_lora:/data/db
  
  orion:
    extends:
      file: docker-compose-dev.yml
      service: orion
    command: -dbhost mongodb -port 1026 -logLevel INFO -prometheus -promPort 8888
    ports:
      - "1026:1026"
      - "8888:8888"
    networks:
      - LoRaWAN

  iotagent-lora:
    depends_on:
      - orion
      - mongodb
    entrypoint: bin/iotagent-lora docker/config-docker.js
    hostname: iotagent-lora
    image: ioeari/iotagent-lora
    ports:
      - "4041:4041"
    networks:
      - LoRaWAN

  postgres-db:
    image: postgres:latest
    hostname: postgres-db
    container_name: db-postgres
    expose:
        - "5432"
    ports:
        - "5432:5432"
    networks:
        - LoRaWAN
    environment:
        - "POSTGRES_PASSWORD=password"
        - "POSTGRES_USER=postgres"
        - "POSTGRES_DB=postgres"
    volumes:
        - postgres_data:/var/lib/postgresql/data
  
  cygnus:
    image: fiware/cygnus-ngsi:latest
    hostname: cygnus
    container_name: fiware-cygnus
    networks:
        - LoRaWAN
    depends_on:
        - postgres-db
    expose:
        - "5080"
    ports:
        - "5055:5055"
        - "5080:5080"
    environment:
        - "CYGNUS_POSTGRESQL_HOST=postgres-db"
        - "CYGNUS_POSTGRESQL_PORT=5432"
        - "CYGNUS_POSTGRESQL_USER=postgres"
        - "CYGNUS_POSTGRESQL_PASS=password"
        - "CYGNUS_POSTGRESQL_ENABLE_CACHE=true"
        - "CYGNUS_POSTGRESQL_SERVICE_PORT=5055"
        - "CYGNUS_LOG_LEVEL=DEBUG"
        - "CYGNUS_API_PORT=5080"
        - "CYGNUS_SERVICE_PORT=5055"
    

  
  grafana:
    image: grafana/grafana
    depends_on:
        - postgres-db
    ports:
        - '3003:3000'
    environment:
        - GF_INSTALL_PLUGINS=orchestracities-map-panel,grafana-clock-panel,grafana-worldmap-panel
    networks:
      - LoRaWAN
    volumes:
      - grafana_data:/var/lib/grafana
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"   
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - LoRaWAN
  simulador:
  build: ./Simular_sensores
  depends_on:
    - mosquitto
  networks:
    - LoRaWAN

  #SERVIÃ‡OS DE MONITORAMENTO

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - LoRaWAN

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - LoRaWAN

  mosquitto-exporter:
    image: kamilbiela/mqtt-exporter:v1.0.0
    container_name: mosquitto-exporter
    restart: unless-stopped
    environment:
      - MQTT_ADDRESS=tcp://mosquitto:1883 
    networks:
      - LoRaWAN

    
volumes:
  mongo_data_lora: 
  lora_device_data:
  postgres_data:
  grafana_data: 


networks:
  LoRaWAN: {}